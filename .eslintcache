[{"/home/soprano/projects/housework/src/index.js":"1","/home/soprano/projects/housework/src/App.js":"2","/home/soprano/projects/housework/src/reportWebVitals.js":"3","/home/soprano/projects/housework/src/components/Firebase/index.js":"4","/home/soprano/projects/housework/src/components/Welcome/index.js":"5","/home/soprano/projects/housework/src/components/Login/index.js":"6","/home/soprano/projects/housework/src/components/Header/index.js":"7","/home/soprano/projects/housework/src/components/Recherche/index.js":"8","/home/soprano/projects/housework/src/components/Signup/index.js":"9","/home/soprano/projects/housework/src/components/ForgetPassword/index.js":"10","/home/soprano/projects/housework/src/components/Utilisation/index.js":"11","/home/soprano/projects/housework/src/components/Contact/index.js":"12","/home/soprano/projects/housework/src/components/PiscinisteAndcoursier/index.js":"13","/home/soprano/projects/housework/src/components/Leanding/index.js":"14","/home/soprano/projects/housework/src/components/Footer/index.js":"15","/home/soprano/projects/housework/src/components/Admin/index.js":"16","/home/soprano/projects/housework/src/components/SectionEmployers/index.js":"17","/home/soprano/projects/housework/src/components/Commandes/index.js":"18","/home/soprano/projects/housework/src/components/pages/index.js":"19","/home/soprano/projects/housework/src/components/ErrorPage/index.js":"20","/home/soprano/projects/housework/src/components/ServicesChoise/index.js":"21","/home/soprano/projects/housework/src/components/Tables/index.js":"22","/home/soprano/projects/housework/src/components/Firebase/appContext.js":"23","/home/soprano/projects/housework/src/components/Firebase/firebase.js":"24","/home/soprano/projects/housework/src/components/ServicesChoise/ContainerService.js":"25","/home/soprano/projects/housework/src/components/Services/index.js":"26","/home/soprano/projects/housework/src/components/Logout/index.js":"27","/home/soprano/projects/housework/src/components/Adress/index.js":"28","/home/soprano/projects/housework/src/components/commande/index.js":"29","/home/soprano/projects/housework/src/components/Paiement/index.js":"30","/home/soprano/projects/housework/src/components/EmployeMenage/index.js":"31","/home/soprano/projects/housework/src/components/PersonnelsHousework/index.js":"32","/home/soprano/projects/housework/src/components/Users/index.js":"33","/home/soprano/projects/housework/src/components/Modal/index.js":"34","/home/soprano/projects/housework/src/components/ModalConfirm/index.js":"35","/home/soprano/projects/housework/src/components/ClientsPhysique/index.js":"36","/home/soprano/projects/housework/src/components/Modal/Details.js":"37","/home/soprano/projects/housework/src/components/Tables/CommandesPhysic.js":"38","/home/soprano/projects/housework/src/components/Tables/EmployesTables.js":"39"},{"size":610,"mtime":1624696264252,"results":"40","hashOfConfig":"41"},{"size":2479,"mtime":1625213133972,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":1624696264252,"results":"43","hashOfConfig":"41"},{"size":132,"mtime":1624696264240,"results":"44","hashOfConfig":"41"},{"size":1380,"mtime":1624696264244,"results":"45","hashOfConfig":"41"},{"size":3151,"mtime":1624696264240,"results":"46","hashOfConfig":"41"},{"size":1647,"mtime":1624696264240,"results":"47","hashOfConfig":"41"},{"size":369,"mtime":1624696264244,"results":"48","hashOfConfig":"41"},{"size":4013,"mtime":1625145173582,"results":"49","hashOfConfig":"41"},{"size":1624,"mtime":1624696264240,"results":"50","hashOfConfig":"41"},{"size":187,"mtime":1624696264244,"results":"51","hashOfConfig":"41"},{"size":155,"mtime":1624696264240,"results":"52","hashOfConfig":"41"},{"size":251,"mtime":1624696264244,"results":"53","hashOfConfig":"41"},{"size":1047,"mtime":1625145173582,"results":"54","hashOfConfig":"41"},{"size":507,"mtime":1624696264240,"results":"55","hashOfConfig":"41"},{"size":1737,"mtime":1624696264220,"results":"56","hashOfConfig":"41"},{"size":2129,"mtime":1625145173582,"results":"57","hashOfConfig":"41"},{"size":5252,"mtime":1625156484672,"results":"58","hashOfConfig":"41"},{"size":812,"mtime":1624696264244,"results":"59","hashOfConfig":"41"},{"size":255,"mtime":1624696264240,"results":"60","hashOfConfig":"41"},{"size":465,"mtime":1624696264244,"results":"61","hashOfConfig":"41"},{"size":5656,"mtime":1625213259218,"results":"62","hashOfConfig":"41"},{"size":111,"mtime":1624696264240,"results":"63","hashOfConfig":"41"},{"size":2019,"mtime":1624696264240,"results":"64","hashOfConfig":"41"},{"size":1141,"mtime":1624696264244,"results":"65","hashOfConfig":"41"},{"size":5554,"mtime":1624696264244,"results":"66","hashOfConfig":"41"},{"size":883,"mtime":1624696264240,"results":"67","hashOfConfig":"41"},{"size":4814,"mtime":1625145173582,"results":"68","hashOfConfig":"41"},{"size":155,"mtime":1624696264244,"results":"69","hashOfConfig":"41"},{"size":197,"mtime":1624696264240,"results":"70","hashOfConfig":"41"},{"size":9156,"mtime":1625145173582,"results":"71","hashOfConfig":"41"},{"size":163,"mtime":1624696264240,"results":"72","hashOfConfig":"41"},{"size":157,"mtime":1624696264244,"results":"73","hashOfConfig":"41"},{"size":352,"mtime":1624696264240,"results":"74","hashOfConfig":"41"},{"size":904,"mtime":1624696264240,"results":"75","hashOfConfig":"41"},{"size":2674,"mtime":1625156264569,"results":"76","hashOfConfig":"41"},{"size":1270,"mtime":1625204297362,"results":"77","hashOfConfig":"41"},{"size":5457,"mtime":1625204275982,"results":"78","hashOfConfig":"41"},{"size":2800,"mtime":1625213306921,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"nhab21",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"82"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"82"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/soprano/projects/housework/src/index.js",[],["170","171"],"/home/soprano/projects/housework/src/App.js",[],"/home/soprano/projects/housework/src/reportWebVitals.js",[],"/home/soprano/projects/housework/src/components/Firebase/index.js",[],"/home/soprano/projects/housework/src/components/Welcome/index.js",[],"/home/soprano/projects/housework/src/components/Login/index.js",["172"],"import React, { useState, useContext, useEffect } from 'react';\nimport {Link } from 'react-router-dom';\nimport {FirebaseContext } from '../Firebase';\n\nconst Login = (props) => {\n\n    //les variables d'états\n    const [email, setEmail]=useState('');\n    const [password, setPassword]=useState('');\n    const [ btn, setBtn]= useState(false);\n    const [ error, setError]= useState('');\n\n    const firebase= useContext(FirebaseContext);\n\n\n    const validationFormulaireConnexion = e =>{\n        e.preventDefault()\n        firebase.loginUser(email, password)\n        \n        .then(user=>{\n\n\n            setEmail('');\n            setPassword('');\n           let userGotten= firebase.getCurrentUser(user.user.email)\n       \n           firebase.db.collection(\"users\").where(\"email\", \"==\", email)\n           .get()\n           .then((querySnapshot) => {\n                let datas=null\n               querySnapshot.forEach((doc) => {  \n                 console.log(doc.data())\n                    datas=doc.data()\n               });\n               if (datas.role === \"admin\") {\n                   return props.history.push('/admin')\n                }else \n                return props.history.push('/welcome')\n\n               \n           })\n\n\n\n\n\n        //    if (userGotten) {\n        //     console.log(userGotten)\n        //         // if (userGotten[0].role === \"user\") {\n                    \n        //         //   return  props.history.push(\"/welcome\")\n        //         // }else {\n\n        //         //     props.history.push(\"/admin\")\n        //         // }\n             \n        //     }\n            \n   \n        })\n        .catch(error=>{\n            setError(error);\n            setEmail('');\n            setPassword('');\n        })\n    }\n\n    useEffect(()=>{\n        if (password.length > 5 && email !== \"\") {\n            setBtn(true);\n        }else if(btn === true){\n            setBtn(false);\n\n        }\n    }, [password, email, btn]);\n\n    const btnDispaly= btn ? <button>Connexion </button> : <button disabled>Connexion</button>\n \n//GESTION DES ERREURS DE FIREBASE */\n\nconst connexionErrot = error !== \"\" && <span>{error.message} </span>\n\n    return (\n        <div className=\"signUpLoginBox\">\n            <div className=\"slContainer\">\n        \n\n            <div className=\"formSignup\">\n\n<form onSubmit={validationFormulaireConnexion}>\n\n     \n    <h2><strong>CONNECTEZ-VOUS</strong></h2>\n\n    <div className=\"inputBox\">\n        <label htmlFor=\"email\">Email</label>\n        <input onChange= {e => setEmail(e.target.value)} type=\"email\"value={email} required autoComplete=\"off\" />\n    </div>\n\n    <div className=\"inputBox\">\n        <label htmlFor=\"password\">Mot de passe</label>\n        <input onChange={e => setPassword(e.target.value)} type=\"password\" value={password} required autoComplete=\"off\" />\n    </div>\n    <p>{connexionErrot}</p>\n\n    <Link className=\"linkLogin\" to=\"/forgetPassword\">Mot de passe oublié? recuperez-le ici</Link>\n    <Link className=\"linkLogin\" to=\"/signup\">Nouveau sur Housework? Inscrivez-vous</Link>\n    {btnDispaly}\n</form>\n</div>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Login;","/home/soprano/projects/housework/src/components/Header/index.js",["173"],"import React from 'react';\nimport { Link,useLocation} from \"react-router-dom\"\n\nconst Header = () => {\n    const location=useLocation()\n    const form = [\"users\", \"paiement\", \"employemenage\",\"commandes\",\"clientsPhysique\"];\n    return (\n       \n      <>\n                <header>\n\n\n        <div className=\"banner-container\">\n            <nav>\n            \n            {location.pathname === \"/admin\" ||\n                 location.pathname === `/admin/users` \n                || location.pathname === `/admin/commandes` \n                || location.pathname === `/admin/employemenage`\n                || location.pathname === `/admin/clientsPhysique`\n\n            ?(\n\n                \n                <ul>\n                {/* /adminservices/:page */}\n                <li><Link to=\"/admin/users\">Utilisateurs</Link></li>\n                <li><Link to=\"/admin/employemenage\">Personnels de menage</Link></li>\n                <li><Link to=\"/admin/commandes\">Commandes</Link></li>\n                <li><Link to=\"/admin/clientsPhysique\">Clients Pysique</Link></li>\n            \n            </ul>\n            \n            ):(\n                <ul>\n\n                    <li><Link className=\"logo\" to=\"/\"><h2>Housework</h2></Link></li>\n                    <li><Link to=\"/welcome\">Services</Link></li>\n                    <li><Link to=\"/utilisation\">Utilisation</Link></li>\n                    <li><Link to=\"/contact\">Contacts</Link></li>\n                </ul>\n            )\n            \n            \n            \n            \n            } \n            \n        </nav>\n        \n        </div>\n\n        </header>\n      </>\n        \n    );\n};\n\nexport default Header;","/home/soprano/projects/housework/src/components/Recherche/index.js",[],"/home/soprano/projects/housework/src/components/Signup/index.js",["174"],"import React, {useState, useContext } from 'react';\nimport {Link} from 'react-router-dom';\nimport {FirebaseContext } from '../Firebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport Adress from '../Adress';\n\n\nconst Signup = (props) => {\n\n    const myDataUser={\n        prenom: \"\",\n        nom: \"\",\n        email: \"\",\n        password:\"\",\n        confirmPassword: \"\",\n        role: \"user\"\n    } \n\n    const [dataUser, setDataUser] = useState(myDataUser);\n    const firebase = useContext(FirebaseContext);\n    const [error, setError] = useState(\"\");\n    const [track, setTrack] = useState(false)\n    const [unikId, setUnikId] = useState(null)\n      \n    const handleChange=e=>{\n        setDataUser({ ...dataUser, [e.target.id]: e.target.value})\n    }\n\n    const handaleSubmit = e =>{\n        e.preventDefault()\n        const { email, password, prenom, role, nom } = dataUser;\n        firebase.signupUser(email, password)\n        .then(authUser=>{\n            setUnikId(authUser.user.uid)\n             return firebase.user(authUser.user.uid).set({\n               \n                prenom,\n                nom,\n                email,\n                role,\n                adresse:\"\"\n            })\n        })\n        .then(()=>{\n            setDataUser({ ...dataUser});\n            setTrack(true)\n            \n\n        })\n        .catch((error)=>{\n            setDataUser({ ...myDataUser});\n            setError(error);\n        })\n    }\n\n    const { prenom, nom, email, password, confirmPassword} = dataUser;\n\nconst btn = prenom === '' || nom ===''|| email === '' || password === '' || password !== confirmPassword ?\n<button disabled>ENREGISTRER</button> : <button>ENREGISTRER</button>\n//Gestion des erreurs\nconst errorMessage = error !== '' && <span> {error.message} </span>\n\n// affichage des rendus de ma page dans JSX en dessous\n    return (\n        <>\n        {!track && \n        <div className=\"signUpLoginBox\">\n            <div className=\"slContainer\">\n\n                   <div className=\"formSignup\">\n\n                    <form onSubmit={handaleSubmit}>\n                            <h2><strong>CREER VOTRE COMPTE</strong></h2>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"prenom\">Prénom</label>\n                                <input onChange={handleChange} value={prenom} type=\"text\" id=\"prenom\" required />\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"prenom\">Nom</label>\n                                <input onChange={handleChange} value={nom} type=\"text\" id=\"nom\" required />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"email\">Email</label>\n                                <input onChange={handleChange} value={email} type=\"email\" id=\"email\" required  />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"password\">Mot de passe</label>\n                                <input onChange={handleChange} value={password}  type=\"password\" id=\"password\"  />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"confirmPassword\">Confirmer mot de passe</label>\n                                <input onChange={handleChange} value={confirmPassword}  type=\"password\" id=\"confirmPassword\" required autoComplete=\"off\" />\n                            </div>\n\n                            <Link className=\"linkLogin\" to=\"/login\">Vous avez déja un compte? Connectez-vous</Link>\n                            {errorMessage}\n\n                            { btn }\n                        </form>\n                   </div>\n\n               </div>\n            </div>}\n            {track && <Adress idChamp={unikId} champ=\"users\"/>}\n\n        \n        </>\n        \n            \n    );\n};\n\nexport default Signup;","/home/soprano/projects/housework/src/components/ForgetPassword/index.js",[],"/home/soprano/projects/housework/src/components/Utilisation/index.js",[],"/home/soprano/projects/housework/src/components/Contact/index.js",[],"/home/soprano/projects/housework/src/components/PiscinisteAndcoursier/index.js",[],"/home/soprano/projects/housework/src/components/Leanding/index.js",[],"/home/soprano/projects/housework/src/components/Footer/index.js",[],"/home/soprano/projects/housework/src/components/Admin/index.js",[],"/home/soprano/projects/housework/src/components/SectionEmployers/index.js",["175","176","177","178"],"import React, {useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport Modal from '../Modal';\n\nconst Section = ({emp}) => {\n\nconst [openModal, setOpenModal] = useState(false)\n\n   const {id,employe}=emp\n  const { nom, prenom, telephone, carteIdentite,\n     dateNaissance, salaire, description,\n      photo, heureService,typeService,carteNational}=employe\n\n      const showModal= id =>{\n        setOpenModal(true);\n      }\n\n      const closeModal= ()=>{\n        setOpenModal(false);\n      }\n\n    return (\n\n        <section className=\"wrapper\">\n            <figure className=\"card_section\">\n                    <div className=\"card_img\"> \n                        <img  src={photo} alt=\"\" />\n                        <div className=\"card_pa\">\n                            <p className=\"paragrapheName\">{nom}, {prenom}</p>\n                        </div>\n                    </div>\n                    <div className=\"card_contenu\">\n                    <div className=\"card_info\">\n                        <h5 className=\"card_service\"><stro>{typeService}</stro> </h5>\n                        <p className=\"card_time\"> {heureService} </p>\n                        <p className=\"card_prix\"> fbi:{salaire}/mois</p>\n                    </div>\n\n                    <div className=\"card_button\">\n                        <Link className=\"card_btn\" onClick={()=>showModal(description)}  >Voir plus</Link>\n                        <Link className=\"card_btn\" to={`/commandes/${typeService}/${id}`} >Engager</Link>\n                        \n                    </div>\n                        \n                    </div>\n            </figure>\n\n            <Modal showModal={openModal} closeModal={closeModal}>\n                <div className=\"modalHeader\">\n                    <h2>{nom+` `+prenom }</h2>\n                </div>\n\n                <div className=\"modalBody\">\n                    {description}\n                </div>\n\n                <div className=\"modalFooter\">\n                    <button className=\"modalBtn\">Fermer</button>\n                </div>\n            </Modal>\n        </section>\n    );\n};\n\nexport default Section;","/home/soprano/projects/housework/src/components/Commandes/index.js",["179","180","181","182","183","184","185","186","187","188","189"],"import React, { useState, useEffect, useContext } from 'react'\nimport { FirebaseContext } from '../Firebase'\nimport Adress from '../Adress'\nimport ModalConfirm from '../ModalConfirm'\nimport { v4 as uuidv4 } from 'uuid'\nimport dateformat from 'dateformat'\nimport { ToastContainer, toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\ntoast.configure()\n\nconst Commandes = props => {\n const [openModal, setOpenModal] = useState(false)\n\n const { id, service } = props.match.params\n const [currentUser, setCurrentUser] = useState()\n const [idAdress, setIdAdress] = useState('')\n const [track, setTrack] = useState(false)\n const [unikId, setUnikId] = useState(uuidv4())\n const [isUpdate, setIsUpdate] = useState('')\n console.log('this is the id and service', id, service)\n useEffect(() => {\n  setCurrentUser(firebase.auth.currentUser)\n }, [id])\n // currenteUser.uid\n const dataCommandes = {\n  exigences: '',\n  idUser: '',\n  idEmployeMenage: '',\n  dateArriver: '',\n }\n const [commande, setCommande] = useState(dataCommandes)\n const firebase = useContext(FirebaseContext)\n\n const handleChange = e => {\n  setCommande({ ...commande, [e.target.id]: e.target.value })\n }\n\n // FONCTION QUI ACTIVE\n const valide = (id, champ) => {\n  firebase.db\n   .collection(`${champ}`)\n   .doc(`${id}`)\n   .update({ isActive: true })\n   .then(data => console.log('mise a jour'))\n }\n\n const handleSubmit = e => {\n  e.preventDefault()\n  const { dateArriver, exigences, date } = commande\n\n  firebase.db\n   .collection('Commandes')\n   .where('idUser', '==', currentUser.uid)\n   .get()\n   .then(querySnapshot => {\n    querySnapshot.forEach(doc => {\n     // doc.data() is never undefined for query doc snapshots\n    })\n   })\n   .catch(error => {\n    console.log('Error getting documents: ', error)\n   })\n\n  if (localStorage.getItem('client')) {\n   firebase.db\n    .collection('employesMenages')\n    .doc(`${id}`)\n    .get()\n    .then(doc => {\n     console.log('this is the employesMenage', doc.data())\n\n     firebase.db\n      .collection('Demmande_sur_place')\n      .doc(unikId)\n      .set({\n       uuid: unikId,\n       dateArriver: dateArriver,\n       exigences: exigences,\n       idEmployeMenage: id,\n       fraisComission: Math.ceil(parseInt(doc.data().salaire, 10) / 10),\n       idClient_sur_place: localStorage.getItem('client'),\n       date: dateformat(new Date()),\n      })\n      .then(doc => {\n       valide(id, 'employesMenages')\n       localStorage.removeItem('client')\n       console.log('commande physic ajouter', doc.doc)\n      })\n      .catch(err => console.log('error qcure', err.message))\n    })\n  } else {\n   firebase.db\n    .collection('employesMenages')\n    .doc(`${id}`)\n    .get()\n    .then(doc => {\n     console.log('this is the employesMenage', doc.data())\n\n     firebase.db\n      .collection('Commandes')\n      .doc(`${unikId}`)\n      .set({\n       uuid: unikId,\n       dateArriver: dateArriver,\n       exigences: exigences,\n       idUser: currentUser.uid,\n       fraisComission: Math.ceil(parseInt(doc.data().salaire, 10) / 10),\n       idEmployeMenage: id,\n       date: dateformat(new Date()),\n       isValid: false,\n      })\n      .then(doc => {\n       toast.success(\n        'Bravooo !!! vous avec commandé votre employé de menage. rester en ligne nous allons vous lamener chez vous dans le délai',\n        {\n         position: 'top-center',\n         autoClose: 10000,\n         hideProgressBar: false,\n         closeOnClick: true,\n         pauseOnHover: true,\n         draggable: true,\n         progress: undefined,\n        }\n       )\n\n       valide(id, 'employesMenages')\n       props.history.push('/welcome')\n      })\n      .catch(error => console.log('error acure', error.message))\n    })\n  }\n }\n\n const closeModal = () => {\n  setOpenModal(false)\n }\n\n const { Commandes, exigences, date } = commande\n\n return (\n  <>\n   {!track && (\n    <div className=\"signUpLoginBox\">\n     <div className=\"slContainer\">\n      <div className=\"formSignup\">\n       <form onSubmit={handleSubmit}>\n        <h2>\n         <strong> PASSER VOTRE DEMANDE </strong>\n        </h2>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"text\">\n          Date de présentation de l'employé de menage\n         </label>\n         <input onChange={handleChange} type=\"date\" id=\"dateArriver\" />\n        </div>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"text\"> Vos exigences</label>\n         <textarea\n          onChange={handleChange}\n          type=\"textarea\"\n          id=\"exigences\"\n          placeholder=\"La description du profil de personnel de menage\"\n         ></textarea>\n        </div>\n\n        <p>\n         Veillez verrifier vos informations avant de confirmer votre demande\n         d'employer de menage chez Housework\n        </p>\n\n        <button type=\"submit\"> Confirmer </button>\n        <button\n         onClick={() => {\n          setTrack(true)\n         }}\n        >\n         {' '}\n         changer votre adresse{' '}\n        </button>\n       </form>\n      </div>\n     </div>\n    </div>\n   )}\n   {track && (\n    <Adress idChamp={unikId} champ=\"Commandes\" isUpdate={currentUser.uid} />\n   )}\n\n   {/* -- modal pop up  */}\n   <ModalConfirm showModal={openModal} closeModal={closeModal} />\n  </>\n )\n}\nexport default Commandes\n","/home/soprano/projects/housework/src/components/pages/index.js",[],"/home/soprano/projects/housework/src/components/ErrorPage/index.js",[],"/home/soprano/projects/housework/src/components/ServicesChoise/index.js",[],"/home/soprano/projects/housework/src/components/Tables/index.js",["190","191","192","193","194","195","196","197"],"/home/soprano/projects/housework/src/components/Firebase/appContext.js",[],"/home/soprano/projects/housework/src/components/Firebase/firebase.js",[],"/home/soprano/projects/housework/src/components/ServicesChoise/ContainerService.js",["198"],"import React, { useContext,useEffect,useState } from 'react';\nimport {FirebaseContext } from '../Firebase';\nimport Section from \"../SectionEmployers\"\n\nconst ContainerService = (props) => {\n   const {service}=props\n   console.log(\"this is service props from ContainerService\",service)\n//    const[employees,setEmployees]=useState([])\n   const [employees, setEmployees] = useState([])\nconst firebase = useContext(FirebaseContext);\nuseEffect(()=>{\n    if(service){\n      firebase.db.collection(\"employesMenages\").where(\"typeService\",\"==\",service).where(\"isActive\",\"==\",false)\n      .get()\n      .then((querySnapshot) => {\n       \n            setEmployees(querySnapshot.docs.map(doc => {return {\n                id:doc.id,\n                employe:doc.data()}} ))\n        \n      })\n      .catch((error) => {\n          console.log(\"Error getting documents: \", error);\n      });\n    }\n  \n  },[])\n\nconsole.log(\"object employees from containerServce\",employees)\n\n   return (\n       <div>\n           {employees? employees.map(em => <Section key={em.id} emp={em}></Section>):<p>no data found</p>}\n       </div>\n   )\n};\n\nexport default ContainerService;","/home/soprano/projects/housework/src/components/Services/index.js",[],"/home/soprano/projects/housework/src/components/Logout/index.js",[],"/home/soprano/projects/housework/src/components/Adress/index.js",["199","200","201","202"],"import React,{ useState, useContext, useEffect } from 'react';\nimport {FirebaseContext } from '../Firebase';\nimport {useHistory} from \"react-router-dom\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\nconst Adress = ({idChamp,champ,isUpdate}) => {\n    console.log(\"id passez\",isUpdate);\n    console.log(\"id passez\",idChamp);\nconst history=useHistory()\nconst adressDatas = {\n    id:\"\",\n    commune: \"\",\n    zone: \"\",\n    quartier: \"\",\n    avenue: \"\",\n    numero: \"\",\n    telephone: \"\"\n}\nconst [getAdresse,setGetAdresse]=useState(null)\nconst [datas, setDatas] = useState(adressDatas)\nconst firebase = useContext(FirebaseContext)\n\nconst handleChange=(e)=>{\n    setDatas({...datas, [e.target.id]: e.target.value });\n\n}\nuseEffect(()=>{\n    if(isUpdate){\n       \n        firebase.db.collection(\"users\").doc(isUpdate).get().then(doc=>{\n       \n\n            firebase.db.collection(\"adresse\").doc(doc.data().adresse).get().then(doc=>{\n  \n                 setDatas({id:doc.id,...doc.data()})\n\n\n             })  \n             \n           })\n        \n    }\n},[isUpdate])\nconst handleSubmit = (e)=>{\ne.preventDefault();\nconst { \n    id,\n    commune,\n    zone,\n    quartier,\n    avenue,\n    numero,\n    telephone\n}=datas\nif(isUpdate){\n    console.log(\"tunaingiya mu update\");\n    console.log(\"data from \", { \n        id,\n        commune,\n        zone,\n        quartier,\n        avenue,\n        numero,\n        telephone\n    });\n    firebase.db.collection('adresse').doc(id).set({\n        commune,\n        zone,\n        quartier,\n        avenue,\n        numero,\n        telephone\n           \n       }).then(doc => console.log(\"successfully updated\")).catch(err=>console.log(err.message))\n}else{\n\n\n    firebase.db.collection('adresse').add({\n        commune:commune , \n        zone:zone,     \n        quartier:quartier, \n        avenue:avenue,   \n        numero:numero,   \n        telephone:telephone\n    \n           \n       }).then(doc => {\n    \n         firebase.db.collection(`${champ}`).doc(`${idChamp}`).update({\n            adresse:doc.id\n         }).then(doc => {\n\n            toast.success('Enregistrement avec succès !!!', {\n                position: \"top-center\",\n                autoClose: 5000,\n                hideProgressBar: false,\n                closeOnClick: true,\n                pauseOnHover: true,\n                draggable: false,\n                \n                });\n\n             console.log(\"document erregistre\",doc)\n            \n             history.push(\"/welcome\")\n            }).catch(err => console.log(\"error acure collection \",err))\n       }).catch(err => console.log(\"error acure \",err))\n      \n\n}\n}\n\n\n\nconst { commune, zone, quartier, avenue, numero, telephone } = datas\n    return (\n        <div className=\"formAdd\">\n\n             <form onSubmit={handleSubmit}>\n                    <h5><strong>{isUpdate?\"Mettre a jour l'adresse\":\"Ajout d'adresse\"}</strong></h5>\n\n                     <div className=\"inputBox\">\n                                <label htmlFor=\"commune\">Commune</label>\n                                <input onChange={handleChange} value={commune}   type=\"text\" id=\"commune\" required />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"zone\">Zone</label>\n                                <input onChange={handleChange} value={zone}   type=\"text\" id=\"zone\" required  />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Quartier</label>\n                                <input onChange={handleChange} value={quartier}   type=\"tel\"  id=\"quartier\" required  />\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Avenue</label>\n                                <input onChange={handleChange} value={avenue}    type=\"text\"  id=\"avenue\"  required />\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Numéro</label>\n                                <input onChange={handleChange} value={numero}   type=\"number\" step=\"any\"  id=\"numero\" required  />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Télphone</label>\n                                <input onChange={handleChange} value={telephone}  type=\"tel\" id=\"telephone\" required />\n                            </div>\n\n                            <button type='submit'>{isUpdate?\"confirmez\":\"validez\"}</button>\n                        </form>\n        </div>\n    );\n};\n\nexport default Adress;","/home/soprano/projects/housework/src/components/commande/index.js",[],"/home/soprano/projects/housework/src/components/Paiement/index.js",[],"/home/soprano/projects/housework/src/components/EmployeMenage/index.js",["203","204","205","206","207","208","209"],"import React, { useState, useContext,useEffect} from 'react';\nimport Adress from '../Adress'\nimport {FirebaseContext } from '../Firebase';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\n\n\n\n\nconst EmloyeMenage =()=>{\n     const [track, setTrack] = useState(false)\n    const [unikId, setUnikId] = useState(uuidv4())\n    const menagerData={\n        nom: \"\",\n        prenom: \"\",\n        telephone: \"\",\n        carteIdentite:  \"\",\n        dateNaissance: \"\",\n        salaire: \"\",\n        description: \"\",\n        photo:null,\n        heureService:\"\",\n        typeService:\"\",\n        genre: \"\"\n        \n\n\n\n    }\n \n    const [services, setServices] = useState(\"\");\n    const [datasPersonnels, setDatasPersonnels] = useState(menagerData);\n    const [iPhoto\n        , setiPhoto\n    ] = useState(null)\n\n    const firebase = useContext(FirebaseContext);\n\n \n    const handleChange=(e)=>{\n        setDatasPersonnels({...datasPersonnels, [e.target.id]: e.target.value });\n\n    }\n\n    const handleSubmit = (e)=>{\n        \n        e.preventDefault();\n \n        const { nom, prenom, telephone, carteIdentite, dateNaissance, salaire,heureService,photo, description, genre} = datasPersonnels\n       \n       const uplaodRef=firebase.storage.ref(`photos/${iPhoto.name}`).put(iPhoto)\n       uplaodRef.on(\"state_changed\",snapShoot=>{\n    \n       },\n      //  here i catch error and  as is not a friendly message i \n      // console it hahah lol\n       err=>console.log(err),\n      //THIS CALLBACK FUNCTION BRIEF GET THE URL OF THE IMAGE FROM THE DATABASE(storage) THEN UPDATE THE POST  \n  \n       ()=>{\n  \n  \n        firebase.storage.ref(\"photos\").child(iPhoto.name).getDownloadURL().then(\n          (url)=>{\n      console.log( nom, prenom, telephone, carteIdentite, dateNaissance, salaire,heureService,photo, description, genre)\n              \n            // so we put  the whole post in firestore\n            \n          return(\n            firebase.db.collection('employesMenages').doc(unikId).set({\n                uuid:unikId,\n                 nom:nom,\n                  prenom:prenom,\n                   carteIdentite:carteIdentite,\n                    dateNaissance:dateNaissance,\n                     salaire:salaire,\n                     typeService:typeService,\n                     heureService:heureService,\n                     photo:url, \n                     description:description,\n                     adresse:\"\",\n                     isActive:false,\n                     genre: genre\n                   \n                   \n                }\n     \n               ).then(result => {\n                toast.warn('Employé de menage enregistrer!!! il ne reste que son adresse', {\n                    position: \"top-center\",\n                    autoClose: 5000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: false\n                    });\n                    \n                   setTrack(!track)\n               })\n               .catch(err=>console.error(err.message))\n          )\n          \n        \n          }\n  \n        )\n  \n       }\n       )\n       \n    }\n\n\n    const { nom, prenom, telephone, carteIdentite, dateNaissance, salaire, description, photo, heureService,typeService,carteNational, genre} = datasPersonnels \n// affichage des rendus de ma page dans JSX en dessous\n    return (\n\n        <>\n        {!track && \n        <div className=\"signUpLoginBox\">\n            <div className=\"slContainer\">\n\n                   <div className=\"formAdd\">\n\n                    <form onSubmit={handleSubmit} >\n                            <h5><strong>ENREGISTRER UN PERSONNEL DE MENAGE</strong></h5>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"prenom\">Nom</label>\n                                <input onChange={handleChange} value={nom}  type=\"text\" id=\"nom\" required />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Prenom</label>\n                                <input onChange={handleChange} value={prenom}   type=\"text\" id=\"prenom\" required  />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Genre</label>\n\n                               <select className=\"selectServices\" onChange={handleChange} id=\"genre\" value={genre} required >\n                                    <option value=\"m\">M</option>\n                                    <option value=\"f\">F</option>\n                                    \n\n                               </select>\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Numero de carte d'identite</label>\n                                <input onChange={handleChange} value={carteIdentite}  type=\"text\"  id=\"carteIdentite\" required />\n                            </div>\n\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Date de naissance</label>\n                                <input onChange={handleChange} value={dateNaissance}  type=\"date\" id=\"dateNaissance\" required />\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Temps Service</label>\n\n                               <select className=\"selectServices\" onChange={handleChange} id=\"heureService\" value={heureService} required >\n                                    <option value=\"Temps_partiel\">Temps partiel</option>\n                                    <option value=\"Pournalier\">Journée</option>\n                                    <option value=\"Heure\"> Par Heure</option>\n                                    <option value=\"Commande\">Par commande</option>\n\n                               </select>\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Type de service</label>\n\n                               <select onChange={handleChange} id=\"typeService\" value={typeService}\n                                     type=\"text\" className=\"selectServices\" required>\n                                    <option value=\"Babyssiteur\">Babyssiteur</option>\n                                    <option value=\"Domestique\">Domestique</option>\n                                    <option value=\"Jardinier\">Jardinier</option>\n                                    <option value=\"Chef_cuisinier\">Chef cuisinier</option>\n                                    <option value=\"Santinel\">Santinel</option>\n                                    <option value=\"Coursier\">Coursier</option>\n                                    <option value=\"Pisciniste\">Pisciniste</option>\n\n                               </select>\n                               {services}\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"salaire\">Salaire</label>\n                                <input onChange={handleChange} value={salaire} type=\"number\" step=\"any\"  id=\"salaire\" required autoComplete=\"off\"  />\n                            </div>\n                            <div className=\"inputBox\">\n                                <label htmlFor=\"photo\">Photo</label>\n                                <input onChange={(e)=>{\n                                    if(e.target.files[0])\n                                    setiPhoto(e.target.files[0])\n                                }}  type=\"file\"  id=\"photo\" required autoComplete=\"off\" />\n                            </div>\n                            {/* <div className=\"inputBox\">\n                                <label htmlFor=\"carte\">Carte national d'identité</label>\n                                <input onChange={(e)=>{\n                                    if(e.target.files[0])\n                                     setiCarte(e.target.files[0])\n                                }} value={carteNational} type=\"file\"  id=\"carteNational\" required autoComplete=\"off\" />\n                            </div> */}\n            \n                            <div className=\"inputBox\">\n                                <label htmlFor=\"text\">Description</label>\n                                <textarea onChange={handleChange} value={description}  type=\"textarea\"  id=\"description\" placeholder=\"La description du profil de personnel de menage\" required>\n                                    \n                                </textarea>\n                            </div>\n\n                            <button type='submit'>Enregistrer</button>\n                        </form>\n                   </div>\n\n               </div>\n            </div>\n            }\n            {track && <Adress idChamp={unikId} champ=\"employesMenages\" />}\n\n        </>\n        \n    );\n};\n\nexport default EmloyeMenage;","/home/soprano/projects/housework/src/components/PersonnelsHousework/index.js",[],"/home/soprano/projects/housework/src/components/Users/index.js",[],"/home/soprano/projects/housework/src/components/Modal/index.js",[],"/home/soprano/projects/housework/src/components/ModalConfirm/index.js",[],"/home/soprano/projects/housework/src/components/ClientsPhysique/index.js",["210"],"import React, { useState, useContext } from 'react'\nimport { FirebaseContext } from '../Firebase'\nimport Adress from '../Adress'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst ClientsPhysique = () => {\n const clients = {\n  nom: '',\n  prenom: '',\n  carteIdentite: '',\n  dateNaissance: '',\n  profession: '',\n }\n\n const [inputClients, setInputClients] = useState(clients)\n const firebase = useContext(FirebaseContext)\n const [unikId, setUnikId] = useState(uuidv4())\n const [track, setTrack] = useState(false)\n\n const handleChange = e => {\n  setInputClients({ ...inputClients, [e.target.id]: e.target.value })\n }\n\n const handleSubmit = e => {\n  e.preventDefault()\n\n  const { nom, prenom, carteIdentite, dateNaissance, profession } = inputClients\n  return firebase.db\n   .collection('clientsPysique')\n   .doc(unikId)\n   .set({\n    uuid: unikId,\n    nom: nom,\n    prenom: prenom,\n    carteIdentite: carteIdentite,\n    dateNaissance: dateNaissance,\n    profession: profession,\n    adresse: '',\n   })\n   .then(doc => {\n    localStorage.setItem('client', unikId)\n    console.log('here enterring the scope', unikId)\n    setTrack(!track)\n    setInputClients({ ...clients })\n   })\n   .catch(error => console.log(error.message))\n }\n\n return (\n  <>\n   {!track && (\n    <div className=\"signUpLoginBox\">\n     <div className=\"slContainer\">\n      <div className=\"formAdd\">\n       <form onSubmit={handleSubmit}>\n        <h5>\n         <strong>ENREGISTRER LES CLIENTS PHYSIQUES</strong>\n        </h5>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"prenom\">Nom</label>\n         <input onChange={handleChange} type=\"text\" id=\"nom\" required />\n        </div>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"text\">Prenom</label>\n         <input onChange={handleChange} type=\"text\" id=\"prenom\" required />\n        </div>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"text\">Numero de carte d'identite</label>\n         <input onChange={handleChange} type=\"text\" id=\"carteIdentite\" />\n        </div>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"text\">Date de naissance</label>\n         <input onChange={handleChange} type=\"date\" id=\"dateNaissance\" />\n        </div>\n\n        <div className=\"inputBox\">\n         <label htmlFor=\"profession\">Profession</label>\n         <input\n          onChange={handleChange}\n          type=\"text\"\n          id=\"profession\"\n          required\n          autoComplete=\"off\"\n         />\n        </div>\n\n        <button type=\"submit\">Enregistrer</button>\n       </form>\n      </div>\n     </div>\n    </div>\n   )}\n\n   {track && <Adress idChamp={unikId} champ=\"clientsPysique\" />}\n  </>\n )\n}\n\nexport default ClientsPhysique\n","/home/soprano/projects/housework/src/components/Modal/Details.js",["211","212"],"import React, { useState } from 'react'\n\nconst Details = ({ detail, close, setClose }) => {\n console.log('details from Details components', detail)\n const { adresse } = detail\n const { user } = detail\n const { telephone, commune, zone, quartier, avenue, numero } = adresse\n const { nom, prenom } = user\n console.log(\n  'details from Details qdresse components',\n  telephone,\n  commune,\n  zone,\n  quartier,\n  avenue,\n  numero\n )\n const { uuid, exigences, date, dateArriver, fraisComission, employe } = detail\n\n // style={{display:close}}\n return (\n  <div className=\"modalBackground1\" style={{ display: close }}>\n   <div className=\"modalContainer1\">\n    <h1>DETAILS DU COMMANDE</h1>\n    <p>Nom du client: {nom}</p>\n    <p>Prenom du client: {prenom}</p>\n    <p>Télephone du client: {telephone}</p>\n    <p>\n     Adresse du client:{' '}\n     {commune + `,` + zone + `,` + quartier + `,` + avenue + `,` + numero}\n    </p>\n    <p>Date: {date}</p>\n    <p>Date de presentation de l'employe: {dateArriver}</p>\n    <p>frais de commission: {fraisComission}</p>\n    <p>Exigences du client: {exigences}</p>\n    <p>Employe de menage: {employe.nom + ` ` + employe.prenom}</p>\n\n    <button onClick={() => setClose(false)}>Fermer</button>\n   </div>\n  </div>\n )\n}\n\nexport default Details\n","/home/soprano/projects/housework/src/components/Tables/CommandesPhysic.js",["213","214","215","216","217","218","219","220"],"import React, { Fragment, useEffect, useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport Details from '../Modal/Details'\nimport { FirebaseContext } from '../Firebase'\nconst PhysicTable = () => {\n const firebase = useContext(FirebaseContext)\n const [commandes, setCommandes] = useState([])\n const [singleCommande, setSingleCommande] = useState(null)\n const [close, setClose] = useState(true)\n const [openModal, setOpenModal] = useState(false)\n\n useEffect(() => {\n  //.log('entre de dans')\n\n  let container = []\n  if (firebase) {\n   firebase.db\n    .collection('Demmande_sur_place')\n    .get()\n    .then(querySnapshot => {\n     querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      //  container.push(doc.id)\n\n      // const brush  ={...doc.id,...doc.data()}\n      container.push(doc.data())\n      //  //.log('document container', ' => ', container)\n     })\n    })\n    .then(() => {\n     for (let i = 0; i < container.length; i++) {\n      //.log(container[i].idEmployeMenage)\n      firebase.db\n       .collection('employesMenages')\n       .doc(`${container[i].idEmployeMenage}`)\n       .get()\n       .then(query => {\n        //  console.log('first this is the employesMenages object', query.data().nom)\n        //  container.push()\n        container[i].employe = query.data()\n       })\n\n      // CHECK NOW FOR THE USERS\n      firebase.db\n       .collection('clientsPysique')\n       .doc(`${container[i].idClient_sur_place}`)\n       .get()\n       .then(query => {\n        //console.log('first this is the user object', query.data().adresse)\n        //  container.push()\n        // console.log('data user', query.data())\n        container[i].user = query.data()\n        firebase.db\n         .collection('adresse')\n         .doc(`${query.data().adresse}`)\n         .get()\n         .then(doc => {\n          //  console.log(\"ths is the address got\",doc.data().commune);\n          container[i].adresse = doc.data()\n         })\n       })\n      //  console.log('second this is the container[i].nom', container[i])\n     }\n    })\n    .then(() => {\n     setCommandes(container)\n\n     return container\n    })\n    .catch(err => console.log(err.message))\n  }\n })\n //  commandes && console.log('commandes out here', commandes)\n\n const showModal = uuid => {\n  setSingleCommande(commandes.find(com => com.uuid == uuid))\n  let c = commandes.find(com => com.uuid == uuid)\n  setSingleCommande(c)\n  //.log('new single commande there', c)\n\n  setOpenModal(true)\n }\n\n const closeModal = () => {\n  setOpenModal(false)\n }\n const deleteCommande = uuid => {\n  //.log('this is uuid', uuid)\n  firebase.db\n   .collection('Demmande_sur_place')\n   .doc(`${uuid}`)\n   .delete()\n   .then(() => {\n    //.log('succefuly deleted')\n   })\n   .catch(err => console.log(err.message))\n }\n const valider = uuid => {\n  firebase.db\n   .collection('Demmande_sur_place')\n   .doc(`${uuid}`)\n   .update({ isValid: true })\n   .then(() => {\n    console.log('succefuly validated')\n   })\n   .catch(err => console.log(err.message))\n }\n const invalider = uuid => {\n  firebase.db\n   .collection('Demmande_sur_place')\n   .doc(`${uuid}`)\n   .update({ isValid: false })\n   .then(() => {\n    console.log('succefuly validated')\n   })\n   .catch(err => console.log(err.message))\n }\n\n return (\n  <Fragment>\n   <div className=\"\"></div>\n\n   <table className=\"tableau_style\">\n    <thead>\n     <tr>\n      <th>Id_Commande</th>\n      <th>Date</th>\n      <th>Présentation</th>\n      <th>Comission</th>\n      <th>valide</th>\n      <th>Détails</th>\n      <th>Valider/Invalider</th>\n      <th>Delete</th>\n     </tr>\n    </thead>\n\n    <tbody>\n     {commandes &&\n      commandes.map(com => {\n       // const {adresse}=detail\n       // const {user}=detail\n       // const {telephone,commune,zone,quartier,avenue,numero}=adresse\n       // const {nom,prenom}=user\n\n       const {\n        uuid,\n        user,\n        date,\n        dateArriver,\n        adresse,\n        fraisComission,\n        isValid,\n        employe,\n       } = com\n       // console.log(\"single one\",uuid,user,date,dateArriver,adresse,fraisComission,employe);\n       //.log('single one com', com)\n       return (\n        <tr>\n         <td>{uuid}</td>\n         <td>{date}</td>\n         <td>{dateArriver}</td>\n         <td>{fraisComission}</td>\n         <td style={{ color: isValid ? 'green' : 'red' }}>\n          {isValid ? 'OUI' : 'NON'}\n         </td>\n         <td>\n          <button\n           onClick={() => showModal(com.uuid)}\n           type=\"button\"\n           class=\"btn btn-outline-info\"\n          >\n           Info\n          </button>\n         </td>\n         <td>\n          {isValid ? (\n           <button className=\"btn btn-success\" onClick={() => invalider(uuid)}>\n            invalider\n           </button>\n          ) : (\n           <button className=\"btn btn-danger\" onClick={() => valider(uuid)}>\n            valider\n           </button>\n          )}\n         </td>\n\n         <td>\n          <button\n           type=\"button\"\n           onClick={() => deleteCommande(uuid)}\n           class=\"btn btn-danger\"\n          >\n           Delete\n          </button>\n         </td>\n        </tr>\n       )\n      })}\n    </tbody>\n   </table>\n   {\n    //  console.log(\"sing\",singleCommande)\n    singleCommande && (\n     <Details\n      close={close}\n      setClose={setClose}\n      detail={singleCommande}\n      physic={true}\n     />\n    )\n   }\n  </Fragment>\n )\n}\nexport default PhysicTable\n","/home/soprano/projects/housework/src/components/Tables/EmployesTables.js",["221","222","223","224","225","226","227","228"],{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":25,"column":16,"nodeType":"235","messageId":"236","endLine":25,"endColumn":26},{"ruleId":"233","severity":1,"message":"237","line":6,"column":11,"nodeType":"235","messageId":"236","endLine":6,"endColumn":15},{"ruleId":"233","severity":1,"message":"238","line":4,"column":16,"nodeType":"235","messageId":"236","endLine":4,"endColumn":22},{"ruleId":"233","severity":1,"message":"239","line":10,"column":24,"nodeType":"235","messageId":"236","endLine":10,"endColumn":33},{"ruleId":"233","severity":1,"message":"240","line":10,"column":35,"nodeType":"235","messageId":"236","endLine":10,"endColumn":48},{"ruleId":"233","severity":1,"message":"241","line":11,"column":6,"nodeType":"235","messageId":"236","endLine":11,"endColumn":19},{"ruleId":"233","severity":1,"message":"242","line":12,"column":39,"nodeType":"235","messageId":"236","endLine":12,"endColumn":52},{"ruleId":"233","severity":1,"message":"243","line":7,"column":10,"nodeType":"235","messageId":"236","endLine":7,"endColumn":24},{"ruleId":"233","severity":1,"message":"244","line":16,"column":9,"nodeType":"235","messageId":"236","endLine":16,"endColumn":17},{"ruleId":"233","severity":1,"message":"245","line":16,"column":19,"nodeType":"235","messageId":"236","endLine":16,"endColumn":30},{"ruleId":"233","severity":1,"message":"246","line":18,"column":17,"nodeType":"235","messageId":"236","endLine":18,"endColumn":26},{"ruleId":"233","severity":1,"message":"247","line":19,"column":9,"nodeType":"235","messageId":"236","endLine":19,"endColumn":17},{"ruleId":"233","severity":1,"message":"248","line":19,"column":19,"nodeType":"235","messageId":"236","endLine":19,"endColumn":30},{"ruleId":"249","severity":1,"message":"250","line":23,"column":5,"nodeType":"251","endLine":23,"endColumn":9,"suggestions":"252"},{"ruleId":"233","severity":1,"message":"253","line":49,"column":35,"nodeType":"235","messageId":"236","endLine":49,"endColumn":39},{"ruleId":"233","severity":1,"message":"254","line":138,"column":10,"nodeType":"235","messageId":"236","endLine":138,"endColumn":19},{"ruleId":"233","severity":1,"message":"255","line":138,"column":21,"nodeType":"235","messageId":"236","endLine":138,"endColumn":30},{"ruleId":"233","severity":1,"message":"253","line":138,"column":32,"nodeType":"235","messageId":"236","endLine":138,"endColumn":36},{"ruleId":"233","severity":1,"message":"256","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"257","line":76,"column":9,"nodeType":"235","messageId":"236","endLine":76,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":79,"column":52,"nodeType":"260","messageId":"261","endLine":79,"endColumn":54},{"ruleId":"258","severity":1,"message":"259","line":80,"column":42,"nodeType":"260","messageId":"261","endLine":80,"endColumn":44},{"ruleId":"233","severity":1,"message":"262","line":87,"column":8,"nodeType":"235","messageId":"236","endLine":87,"endColumn":18},{"ruleId":"233","severity":1,"message":"263","line":150,"column":10,"nodeType":"235","messageId":"236","endLine":150,"endColumn":14},{"ruleId":"233","severity":1,"message":"264","line":153,"column":10,"nodeType":"235","messageId":"236","endLine":153,"endColumn":17},{"ruleId":"233","severity":1,"message":"265","line":156,"column":10,"nodeType":"235","messageId":"236","endLine":156,"endColumn":17},{"ruleId":"249","severity":1,"message":"266","line":27,"column":5,"nodeType":"251","endLine":27,"endColumn":7,"suggestions":"267"},{"ruleId":"233","severity":1,"message":"243","line":4,"column":10,"nodeType":"235","messageId":"236","endLine":4,"endColumn":24},{"ruleId":"233","severity":1,"message":"268","line":21,"column":8,"nodeType":"235","messageId":"236","endLine":21,"endColumn":18},{"ruleId":"233","severity":1,"message":"269","line":21,"column":19,"nodeType":"235","messageId":"236","endLine":21,"endColumn":32},{"ruleId":"249","severity":1,"message":"270","line":45,"column":3,"nodeType":"251","endLine":45,"endColumn":13,"suggestions":"271"},{"ruleId":"233","severity":1,"message":"272","line":1,"column":38,"nodeType":"235","messageId":"236","endLine":1,"endColumn":47},{"ruleId":"233","severity":1,"message":"243","line":5,"column":10,"nodeType":"235","messageId":"236","endLine":5,"endColumn":24},{"ruleId":"233","severity":1,"message":"246","line":14,"column":20,"nodeType":"235","messageId":"236","endLine":14,"endColumn":29},{"ruleId":"233","severity":1,"message":"273","line":33,"column":22,"nodeType":"235","messageId":"236","endLine":33,"endColumn":33},{"ruleId":"233","severity":1,"message":"239","line":116,"column":26,"nodeType":"235","messageId":"236","endLine":116,"endColumn":35},{"ruleId":"233","severity":1,"message":"274","line":116,"column":89,"nodeType":"235","messageId":"236","endLine":116,"endColumn":94},{"ruleId":"233","severity":1,"message":"242","line":116,"column":121,"nodeType":"235","messageId":"236","endLine":116,"endColumn":134},{"ruleId":"233","severity":1,"message":"246","line":17,"column":17,"nodeType":"235","messageId":"236","endLine":17,"endColumn":26},{"ruleId":"233","severity":1,"message":"275","line":1,"column":17,"nodeType":"235","messageId":"236","endLine":1,"endColumn":25},{"ruleId":"233","severity":1,"message":"276","line":18,"column":10,"nodeType":"235","messageId":"236","endLine":18,"endColumn":14},{"ruleId":"233","severity":1,"message":"256","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"257","line":10,"column":9,"nodeType":"235","messageId":"236","endLine":10,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":76,"column":52,"nodeType":"260","messageId":"261","endLine":76,"endColumn":54},{"ruleId":"258","severity":1,"message":"259","line":77,"column":42,"nodeType":"260","messageId":"261","endLine":77,"endColumn":44},{"ruleId":"233","severity":1,"message":"262","line":84,"column":8,"nodeType":"235","messageId":"236","endLine":84,"endColumn":18},{"ruleId":"233","severity":1,"message":"263","line":147,"column":9,"nodeType":"235","messageId":"236","endLine":147,"endColumn":13},{"ruleId":"233","severity":1,"message":"264","line":150,"column":9,"nodeType":"235","messageId":"236","endLine":150,"endColumn":16},{"ruleId":"233","severity":1,"message":"265","line":153,"column":9,"nodeType":"235","messageId":"236","endLine":153,"endColumn":16},{"ruleId":"233","severity":1,"message":"256","line":2,"column":10,"nodeType":"235","messageId":"236","endLine":2,"endColumn":14},{"ruleId":"233","severity":1,"message":"277","line":8,"column":25,"nodeType":"235","messageId":"236","endLine":8,"endColumn":42},{"ruleId":"233","severity":1,"message":"257","line":10,"column":9,"nodeType":"235","messageId":"236","endLine":10,"endColumn":18},{"ruleId":"233","severity":1,"message":"278","line":10,"column":20,"nodeType":"235","messageId":"236","endLine":10,"endColumn":32},{"ruleId":"249","severity":1,"message":"279","line":28,"column":5,"nodeType":"251","endLine":28,"endColumn":15,"suggestions":"280"},{"ruleId":"233","severity":1,"message":"264","line":67,"column":9,"nodeType":"235","messageId":"236","endLine":67,"endColumn":16},{"ruleId":"233","severity":1,"message":"281","line":70,"column":9,"nodeType":"235","messageId":"236","endLine":70,"endColumn":20},{"ruleId":"258","severity":1,"message":"259","line":86,"column":21,"nodeType":"260","messageId":"261","endLine":86,"endColumn":23},"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"no-unused-vars","'userGotten' is assigned a value but never used.","Identifier","unusedVar","'form' is assigned a value but never used.","'uuidv4' is defined but never used.","'telephone' is assigned a value but never used.","'carteIdentite' is assigned a value but never used.","'dateNaissance' is assigned a value but never used.","'carteNational' is assigned a value but never used.","'ToastContainer' is defined but never used.","'idAdress' is assigned a value but never used.","'setIdAdress' is assigned a value but never used.","'setUnikId' is assigned a value but never used.","'isUpdate' is assigned a value but never used.","'setIsUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'firebase.auth.currentUser'. Either include it or remove the dependency array.","ArrayExpression",["284"],"'date' is assigned a value but never used.","'Commandes' is assigned a value but never used.","'exigences' is assigned a value but never used.","'Link' is defined but never used.","'openModal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'closeModal' is assigned a value but never used.","'user' is assigned a value but never used.","'adresse' is assigned a value but never used.","'employe' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'firebase.db' and 'service'. Either include them or remove the dependency array.",["285"],"'getAdresse' is assigned a value but never used.","'setGetAdresse' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'firebase.db'. Either include it or remove the dependency array.",["286"],"'useEffect' is defined but never used.","'setServices' is assigned a value but never used.","'photo' is assigned a value but never used.","'useState' is defined but never used.","'uuid' is assigned a value but never used.","'setSingleCommande' is assigned a value but never used.","'setOpenModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'employees'. Either include it or remove the dependency array.",["287"],"'description' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},"Update the dependencies array to be: [firebase.auth.currentUser, id]",{"range":"296","text":"297"},"Update the dependencies array to be: [firebase.db, service]",{"range":"298","text":"299"},"Update the dependencies array to be: [firebase.db, isUpdate]",{"range":"300","text":"301"},"Update the dependencies array to be: [employees, firebase]",{"range":"302","text":"303"},[857,861],"[firebase.auth.currentUser, id]",[885,887],"[firebase.db, service]",[1123,1133],"[firebase.db, isUpdate]",[894,904],"[employees, firebase]"]